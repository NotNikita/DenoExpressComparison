version: "3.8"

volumes:
  postgres_data:

services:
  deno-app:
    container_name: deno-app
    build: ./deno-app/
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
  postgres:
    image: postgres:17.2
    container_name: postgres
    build:
      context: ./database
      dockerfile: Dockerfile
    # command:
    #   - "postgres"
    #   - "-c"
    #   - "max_connections=50"
    #   - "-c"
    #   - "shared_buffers=1GB"
    #   - "-c"
    #   - "effective_cache_size=4GB"
    #   - "-c"
    #   - "work_mem=16MB"
    #   - "-c"
    #   - "maintenance_work_mem=512MB"
    #   - "-c"
    #   - "random_page_cost=1.1"
    #   - "-c"
    #   - "temp_file_limit=10GB"
    #   - "-c"
    #   - "log_min_duration_statement=200ms"
    #   - "-c"
    #   - "idle_in_transaction_session_timeout=10s"
    #   - "-c"
    #   - "lock_timeout=1s"
    #   - "-c"
    #   - "statement_timeout=60s"
    #   - "-c"
    #   - "shared_preload_libraries=pg_stat_statements"
    #   - "-c"
    #   - "pg_stat_statements.max=10000"
    #   - "-c"
    #   - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "1946alien" # or 1946alien
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "3"
          memory: 10G
